// Main namespace
[Telta.Example]

use Telta.Core;
use System.IO;

namespace FileImpl // SubNamespace (Telta.Example.FileImpl)
{
    public class File
    {
        private literal string ErrorMessage = "Wrong path"; // inline field as literal
        private string path;
    
        // Ctor
        public *(string path)
        {
            x!path = path; // x! - access to this members, x - any identifier
        }
        
        // Private instance method
        private void InnerEvaluations(string? option, int* byref, int~ out_ref)
        {
            out_ref = 0;
            x!path = Path.Combine(x!path, (option ?? "none")); // If Option is Some -> return value, else -> return "none"
        }
        
        public <byte[] | string> LoadFile() // <byte[] | string> - Either type (return left or right)
        {
            try
            {
                return File.ReadAllBytes(x!path);
            }
            with
            | FileNotFound _ -> // "Exception" may be missed
                {
                    println("In FileNotFoundException");
                    return $"`(ErrorMessage): File - `(x!path) not founded"
                }
            | _ ex -> 
                {
                    return $"`(ErrorMessage): `(ex.Message)"
                }
        }
    }
}